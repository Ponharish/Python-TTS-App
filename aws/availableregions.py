import boto3
from botocore.exceptions import ClientError, EndpointConnectionError
from concurrent.futures import ThreadPoolExecutor, as_completed

def getAvailableRegions(aws_access_key_id, aws_secret_access_key):
    session = boto3.Session(
        aws_access_key_id=aws_access_key_id,
        aws_secret_access_key=aws_secret_access_key
    )
    
    regions = session.get_available_regions('polly')
    accessibleRegions = []


    #Below code is generated by chatGPT

    def check_region(region):
        try:
            polly_client = session.client('polly', region_name=region)
            polly_client.describe_voices()
            return region
        except (ClientError, EndpointConnectionError):
            return None
        
    with ThreadPoolExecutor(max_workers = 10) as executor:
        futures = {executor.submit(check_region, region): region for region in regions}
        for future in as_completed(futures):
            result = future.result()
            if result:
                accessibleRegions.append(result)
    
    return accessibleRegions
